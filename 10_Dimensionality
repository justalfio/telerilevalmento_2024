# DIMENSIONALITY: impossibile a volte scegliere la banda, come fare ad identificare una sola banda? Flatland, libro che descrive una società divise in due dimensioni, appare un giorno una sfera. 
# se noi abbiamo delle variabili trasmesse bidimensionalmente, le possiamo racchiudere in una sola dimensione con un'analisi, la multivariata, analisi delle componenti principali
# due variabili correlate tra loro, facciamo passare due nuovi assi PC1 e PC2.
# se i dati non sono correlati linearmente, abbiamo la correspondence analysis e si usa un metodo "logaritmico" per poter riportare tutto su scala lineare e non tendente all'esponenziale.
# im.pca che fa tutti i passaggi per compattare il set in una sola dimensione, analisi fatta e poi restituisce tutte le componenti;
# nostro set originario con le due componenti, due bande, ognuna contiene il range di dati di misura al 50%, facciamo passare un nuovo asse che per definizione contiene gran parte del range,
# il secondo asse è invece con range minore. Il primo asse PC1 ha un range molto più ampio del secondo, e invece di usare il sistema basato su due bande, usiamo il set di due assi (monodimensionale)

library(imageRy)
library(terra)
library(viridis)

# listing data
im.list()
"sentinel.dolomites.b2.tif"  immagine di oggi con le varie badne

# importing data
b2<-im.import("sentinel.dolomites.b2.tif") # blue
b3<-im.import("sentinel.dolomites.b3.tif") # green 
b4<-im.import("sentinel.dolomites.b4.tif") # red
b8<-im.import("sentinel.dolomites.b8.tif") # nir
# dopo andiamo a far elo stack per creare un'immagine satellitare

sentdo<-c(b2, b3, b4, b8)

im.plotRGB(sentdo, r=4, g=3, b=2), la parte della vegetazione è rossa perché il nostro quarto livello originale e in infrarosso e l'abbiamo montata nel rosso.
# una volta che le bande sono nell'immagine satellitare, diventano elementi, 1,2,3,4, numerabili e intercambiabili.
im.plotRGB(sentdo, r=3, g=4, b=2)

pairs(sentdo) # non sempre due variabili sono casualmente relazionate, banda verde e banda blu molto correlato, blu e rosso, verde e rosso sono molto correalte tra loro.
# con l'infrarosso la correlazione c'è, ma più bassa.
# le 4 bande con una sola banda è il nostro obiettivo di progetto.

#calcolo PCA, funzione: funizoni im. sono gli inizi dei pacchetti imageRy
pcimage<- im.pca(sentdo)
Standard deviations (1, .., p=4):
[1] 1332.15353  659.91773   35.09147
[4]   26.91384 qeusti sono i valori che rappresentano il range PC1 (90%) di ogni componente principale. Per sapere la percentuale di variabilità, si copia la stringa 

Rotation (n x k) = (4 x 4):
                            PC1
sentinel.dolomites.b2 0.4145117
sentinel.dolomites.b3 0.4742897
sentinel.dolomites.b4 0.6033025
sentinel.dolomites.b8 0.4891374
                             PC2
sentinel.dolomites.b2  0.2532870
sentinel.dolomites.b3  0.2100468
sentinel.dolomites.b4  0.3664597
sentinel.dolomites.b8 -0.8703065
                              PC3
sentinel.dolomites.b2 -0.53901910
sentinel.dolomites.b3 -0.45808366
sentinel.dolomites.b4  0.70620245
sentinel.dolomites.b8  0.02993104
                              PC4
sentinel.dolomites.b2 -0.68810181
sentinel.dolomites.b3  0.72186497
sentinel.dolomites.b4 -0.05487729
sentinel.dolomites.b8 -0.04914611

tot<- sum(1332.15353,  659.91773,   35.09147,  26.91384)
# dividiamo ogni numero con il totale 1332.15353*/tot e otteniamo la percentuale di ogni componente principale.
i numeri seguiti da sentinel.dolomites e la banda originale troviamo dei numeri, ossia a quale valore la componente principale si relaziona meglio.
# plottiamo PCA

vir<- colorRampPalette(viridis(7)) (100)
plot(pcimage, col=vir)
plot(pcimage, col=viridis(100))
PC3 è un mostro perché presenta solo 2% della variabilità, sistema quadridimensionale, ad un sistema più o meno monodimensionale
